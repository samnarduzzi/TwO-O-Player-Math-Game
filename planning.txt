Task 1: Extract Nouns for Classes
Player
Game

Task 2: Write their roles
Player:
The Player class will represent the players in the game. Each player will have a name, score and lives. It will also have methods to update the player's score and lives.

Game:
The Game class will represent the game logic. It will have methods to generate a new question, check the player's answer, update the player's score and lives, and determine the winner.

Task 3: Write down the methods for each class
Player:

- initialize(name): creates a new player instance with a given name, score and lives
- update_score: updates the player's score based on whether the answer is correct or incorrect
- update_lives: updates the player's lives based on whether the answer is correct or incorrect

Game:

- initialize(player1, player2): creates a new game instance with two player instances
- generate_question: generates a new addition question
- check_answer: checks if the player's answer is correct or not
- current_player: determines who the current player is
- game_loop: runs the game loop where each instance of the loop is the other player's turn
- game_over?: checks if the game is over or not
- display_score: displays the current score of each player
- winner: determines who the winner is


- Which class will contain the game loop (where each instance of the loop is the other players turn)?

The Game class will contain the game loop where each instance of the loop is the other player's turn.

- Which class should manage who the current_player is?

The Game class should manage who the current_player is.

-Which class(es) will contain user I/O and which will not have any?

The Player class will not contain any user I/O, but the Game class will.